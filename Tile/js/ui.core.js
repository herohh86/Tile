/*
 * jQuery UI Core 1.10.4
 * http://jqueryui.com
 *
 * Copyright 2014 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 *
 * http://api.jqueryui.com/category/ui-core/
 */
(function (a, d) { var e = 0, c = /^ui-id-\d+$/; a.ui = a.ui || {}; a.extend(a.ui, { version: "1.10.4", keyCode: { BACKSPACE: 8, COMMA: 188, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, LEFT: 37, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109, PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SPACE: 32, TAB: 9, UP: 38 } }); a.fn.extend({ focus: (function (g) { return function (h, i) { return typeof h === "number" ? this.each(function () { var j = this; setTimeout(function () { a(j).focus(); if (i) { i.call(j) } }, h) }) : g.apply(this, arguments) } })(a.fn.focus), scrollParent: function () { var g; if ((a.ui.ie && (/(static|relative)/).test(this.css("position"))) || (/absolute/).test(this.css("position"))) { g = this.parents().filter(function () { return (/(relative|absolute|fixed)/).test(a.css(this, "position")) && (/(auto|scroll)/).test(a.css(this, "overflow") + a.css(this, "overflow-y") + a.css(this, "overflow-x")) }).eq(0) } else { g = this.parents().filter(function () { return (/(auto|scroll)/).test(a.css(this, "overflow") + a.css(this, "overflow-y") + a.css(this, "overflow-x")) }).eq(0) } return (/fixed/).test(this.css("position")) || !g.length ? a(document) : g }, zIndex: function (j) { if (j !== d) { return this.css("zIndex", j) } if (this.length) { var g = a(this[0]), h, i; while (g.length && g[0] !== document) { h = g.css("position"); if (h === "absolute" || h === "relative" || h === "fixed") { i = parseInt(g.css("zIndex"), 10); if (!isNaN(i) && i !== 0) { return i } } g = g.parent() } } return 0 }, uniqueId: function () { return this.each(function () { if (!this.id) { this.id = "ui-id-" + (++e) } }) }, removeUniqueId: function () { return this.each(function () { if (c.test(this.id)) { a(this).removeAttr("id") } }) } }); function b(g, i) { var j, k, h, l = g.nodeName.toLowerCase(); if ("area" === l) { j = g.parentNode; k = j.name; if (!g.href || !k || j.nodeName.toLowerCase() !== "map") { return false } h = a("img[usemap=#" + k + "]")[0]; return !!h && f(h) } return (/input|select|textarea|button|object/.test(l) ? !g.disabled : "a" === l ? g.href || i : i) && f(g) } function f(g) { return a.expr.filters.visible(g) && !a(g).parents().addBack().filter(function () { return a.css(this, "visibility") === "hidden" }).length } a.extend(a.expr[":"], { data: a.expr.createPseudo ? a.expr.createPseudo(function (g) { return function (h) { return !!a.data(h, g) } }) : function (g, h, j) { return !!a.data(g, j[3]) }, focusable: function (g) { return b(g, !isNaN(a.attr(g, "tabindex"))) }, tabbable: function (g) { var i = a.attr(g, "tabindex"), h = isNaN(i); return (h || i >= 0) && b(g, !h) } }); if (!a("<a>").outerWidth(1).jquery) { a.each(["Width", "Height"], function (g, h) { var l = h === "Width" ? ["Left", "Right"] : ["Top", "Bottom"], m = h.toLowerCase(), j = { innerWidth: a.fn.innerWidth, innerHeight: a.fn.innerHeight, outerWidth: a.fn.outerWidth, outerHeight: a.fn.outerHeight }; function k(n, p, i, o) { a.each(l, function () { p -= parseFloat(a.css(n, "padding" + this)) || 0; if (i) { p -= parseFloat(a.css(n, "border" + this + "Width")) || 0 } if (o) { p -= parseFloat(a.css(n, "margin" + this)) || 0 } }); return p } a.fn["inner" + h] = function (i) { if (i === d) { return j["inner" + h].call(this) } return this.each(function () { a(this).css(m, k(this, i) + "px") }) }; a.fn["outer" + h] = function (n, i) { if (typeof n !== "number") { return j["outer" + h].call(this, n) } return this.each(function () { a(this).css(m, k(this, n, true, i) + "px") }) } }) } if (!a.fn.addBack) { a.fn.addBack = function (g) { return this.add(g == null ? this.prevObject : this.prevObject.filter(g)) } } if (a("<a>").data("a-b", "a").removeData("a-b").data("a-b")) { a.fn.removeData = (function (g) { return function (h) { if (arguments.length) { return g.call(this, a.camelCase(h)) } else { return g.call(this) } } })(a.fn.removeData) } a.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()); a.support.selectstart = "onselectstart" in document.createElement("div"); a.fn.extend({ disableSelection: function () { return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (g) { g.preventDefault() }) }, enableSelection: function () { return this.unbind(".ui-disableSelection") } }); a.extend(a.ui, { plugin: { add: function (h, j, l) { var g, k = a.ui[h].prototype; for (g in l) { k.plugins[g] = k.plugins[g] || []; k.plugins[g].push([j, l[g]]) } }, call: function (j, k, g) { var h, l = j.plugins[k]; if (!l || !j.element[0].parentNode || j.element[0].parentNode.nodeType === 11) { return } for (h = 0; h < l.length; h++) { if (j.options[l[h][0]]) { l[h][1].apply(j.element, g) } } } }, hasScroll: function (h, g) { if (a(h).css("overflow") === "hidden") { return false } var j = (g && g === "left") ? "scrollLeft" : "scrollTop", i = false; if (h[j] > 0) { return true } h[j] = 1; i = (h[j] > 0); h[j] = 0; return i } }) })(jQuery);